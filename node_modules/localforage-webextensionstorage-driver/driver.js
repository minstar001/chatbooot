'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

exports.default = createDriver;

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createDriver(name, property) {
  var storage = (0, _utils.getStorage)();
  var support = !!(storage && storage[property]);

  var driver = support ? storage[property] : {
    clear: function clear() {},
    get: function get() {},
    remove: function remove() {},
    set: function set() {}
  };
  var _clear = driver.clear.bind(driver);
  var get = driver.get.bind(driver);
  var remove = driver.remove.bind(driver);
  var set = driver.set.bind(driver);

  return {
    _driver: name,
    _support: support,
    _initStorage: function _initStorage() {
      return _promise2.default.resolve();
    },
    clear: function clear(callback) {
      var _this = this;

      return (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _clear();

                if (callback) callback();

              case 2:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this);
      }))();
    },
    iterate: function iterate(iterator, callback) {
      var _this2 = this;

      return (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2() {
        var items, keys;
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return (0, _utils.usePromise)(get, null);

              case 2:
                items = _context2.sent;
                keys = (0, _keys2.default)(items);

                keys.forEach(function (key, i) {
                  return iterator(items[key], key, i);
                });

                if (callback) callback();

              case 6:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, _this2);
      }))();
    },
    getItem: function getItem(key, callback) {
      var _this3 = this;

      return (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3() {
        var result;
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.prev = 0;
                _context3.next = 3;
                return (0, _utils.usePromise)(get, key);

              case 3:
                result = _context3.sent;

                result = typeof key === 'string' ? result[key] : result;
                result = result === undefined ? null : result;

                if (callback) callback(null, result);
                return _context3.abrupt('return', result);

              case 10:
                _context3.prev = 10;
                _context3.t0 = _context3['catch'](0);

                if (callback) callback(_context3.t0);
                throw _context3.t0;

              case 14:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, _this3, [[0, 10]]);
      }))();
    },
    key: function key(n, callback) {
      var _this4 = this;

      return (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4() {
        var results, key;
        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return (0, _utils.usePromise)(get, null);

              case 2:
                results = _context4.sent;
                key = (0, _keys2.default)(results)[n];


                if (callback) callback(key);
                return _context4.abrupt('return', key);

              case 6:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, _this4);
      }))();
    },
    keys: function keys(callback) {
      var _this5 = this;

      return (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee5() {
        var results, keys;
        return _regenerator2.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return (0, _utils.usePromise)(get, null);

              case 2:
                results = _context5.sent;
                keys = (0, _keys2.default)(results);


                if (callback) callback(keys);
                return _context5.abrupt('return', keys);

              case 6:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, _this5);
      }))();
    },
    length: function length(callback) {
      var _this6 = this;

      return (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee6() {
        var results, length;
        return _regenerator2.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return (0, _utils.usePromise)(get, null);

              case 2:
                results = _context6.sent;
                length = (0, _keys2.default)(results).length;


                if (callback) callback(length);
                return _context6.abrupt('return', length);

              case 6:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, _this6);
      }))();
    },
    removeItem: function removeItem(key, callback) {
      var _this7 = this;

      return (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee7() {
        return _regenerator2.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return (0, _utils.usePromise)(remove, key);

              case 2:
                if (callback) callback();

              case 3:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, _this7);
      }))();
    },
    setItem: function setItem(key, value, callback) {
      var _this8 = this;

      return (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee8() {
        return _regenerator2.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return (0, _utils.usePromise)(set, (0, _defineProperty3.default)({}, key, value));

              case 2:
                if (callback) callback();

              case 3:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, _this8);
      }))();
    }
  };
}