{
  "_args": [
    [
      {
        "raw": "@lerna/bootstrap@4.0.0",
        "scope": "@lerna",
        "escapedName": "@lerna%2fbootstrap",
        "name": "@lerna/bootstrap",
        "rawSpec": "4.0.0",
        "spec": "4.0.0",
        "type": "version"
      },
      "/usr/local/apache/htdocs/node_modules/lerna"
    ]
  ],
  "_from": "@lerna/bootstrap@4.0.0",
  "_hasShrinkwrap": false,
  "_id": "@lerna/bootstrap@4.0.0",
  "_inCache": true,
  "_location": "/@lerna/bootstrap",
  "_nodeVersion": "14.15.5",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/bootstrap_4.0.0_1612996941580_0.13444132153879962"
  },
  "_npmUser": {
    "name": "evocateur",
    "email": "daniel.stockman@gmail.com"
  },
  "_npmVersion": "lerna/4.0.0/node@v14.15.5+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@lerna/bootstrap@4.0.0",
    "scope": "@lerna",
    "escapedName": "@lerna%2fbootstrap",
    "name": "@lerna/bootstrap",
    "rawSpec": "4.0.0",
    "spec": "4.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/@lerna/add",
    "/lerna"
  ],
  "_resolved": "https://registry.npmjs.org/@lerna/bootstrap/-/bootstrap-4.0.0.tgz",
  "_shasum": "5f5c5e2c6cfc8fcec50cb2fbe569a8c607101891",
  "_shrinkwrap": null,
  "_spec": "@lerna/bootstrap@4.0.0",
  "_where": "/usr/local/apache/htdocs/node_modules/lerna",
  "author": {
    "name": "Daniel Stockman",
    "url": "https://github.com/evocateur"
  },
  "bugs": {
    "url": "https://github.com/lerna/lerna/issues"
  },
  "dependencies": {
    "@lerna/command": "4.0.0",
    "@lerna/filter-options": "4.0.0",
    "@lerna/has-npm-version": "4.0.0",
    "@lerna/npm-install": "4.0.0",
    "@lerna/package-graph": "4.0.0",
    "@lerna/pulse-till-done": "4.0.0",
    "@lerna/rimraf-dir": "4.0.0",
    "@lerna/run-lifecycle": "4.0.0",
    "@lerna/run-topologically": "4.0.0",
    "@lerna/symlink-binary": "4.0.0",
    "@lerna/symlink-dependencies": "4.0.0",
    "@lerna/validation-error": "4.0.0",
    "dedent": "^0.7.0",
    "get-port": "^5.1.1",
    "multimatch": "^5.0.0",
    "npm-package-arg": "^8.1.0",
    "npmlog": "^4.1.2",
    "p-map": "^4.0.0",
    "p-map-series": "^2.1.0",
    "p-waterfall": "^2.1.1",
    "read-package-tree": "^5.3.1",
    "semver": "^7.3.4"
  },
  "description": "Link local packages together and install remaining package dependencies",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-RkS7UbeM2vu+kJnHzxNRCLvoOP9yGNgkzRdy4UV2hNalD7EP41bLvRVOwRYQ7fhc2QcbhnKNdOBihYRL0LcKtw==",
    "shasum": "5f5c5e2c6cfc8fcec50cb2fbe569a8c607101891",
    "tarball": "https://registry.npmjs.org/@lerna/bootstrap/-/bootstrap-4.0.0.tgz",
    "fileCount": 8,
    "unpackedSize": 56288,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgJGFNCRA9TVsSAnZWagAA1AgP/jjh4a0ZJtDwZq0oosHF\n37e7g433QX/hHbmZF0zQoB+htdjA81EEB0rtdRFyYWyqiUIIzW5LC9B8INb8\nUZoLn5l8t709w/jmX97S5sjJgE30TxS9gMaWax086bF5CSoYwXJgXkz3VNMm\nnss+wYPW9YuFjhwxxp8G1YMFTrWg5pnjIKOLh/UyYW8GrHnBdcVmlx4fHLRi\nxMe1BviJsyDsyV7S8Xm+7sUid9uGvT/xHNc+xoaR4zY8w23EUpUcncKNBjSY\ngep7QvBaIg5BGANSnPVyWHqJqE46+DhjrB2nm3IePd6EDD5p6EJjpYrcUJ7J\n0ZxdC5njJma8+Mf1C3jns3K45ToubdQ1W7ooA5G0tg9W0z3LUMXu4pIYGe5r\nU1RE/3qR7m8IHGv3pH/c+Mh8HtGWoXNLsOaXwy7jkikOqklf9CWUUDZ7hB4a\niSiVx/nWqerej9UYKbLKiwuNZxjk6lb74P/PuLMzEO7WvOC1mrcj5QOCDNg/\n7lhyfY/wq27P28sHudR7/CmlBkATabCxy2hEPHMqztfPSSz53E3Lo2uAL9ar\nc8JO6LCx6fiCM/GRWXHj0MZAqfTZRDMSuGbjVfLdFMqOV3EumcQ2VEGJC9Fe\niH8tGhMUtilfe86I1CUgKj8LC1JgvJYRNfoKo/VkC8oYN/imaXQh92vaBsQ+\ndZ0X\r\n=8KDQ\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 10.18.0"
  },
  "gitHead": "4582c476e07dddddd6b2e3ab6e7f52c1f9eed59a",
  "homepage": "https://github.com/lerna/lerna/tree/master/commands/bootstrap#readme",
  "keywords": [
    "lerna",
    "command"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "hzoo",
      "email": "hi@henryzoo.com"
    },
    {
      "name": "evocateur",
      "email": "daniel.stockman@gmail.com"
    }
  ],
  "name": "@lerna/bootstrap",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# `@lerna/bootstrap`\n\n> Link local packages together and install remaining package dependencies\n\nInstall [lerna](https://www.npmjs.com/package/lerna) for access to the `lerna` CLI.\n\n## Usage\n\n```sh\n$ lerna bootstrap\n```\n\nBootstrap the packages in the current Lerna repo.\nInstalls all of their dependencies and links any cross-dependencies.\n\nWhen run, this command will:\n\n1. `npm install` all external dependencies of each package.\n2. Symlink together all Lerna `packages` that are dependencies of each other.\n3. `npm run prepublish` in all bootstrapped packages (unless `--ignore-prepublish` is passed).\n4. `npm run prepare` in all bootstrapped packages.\n\n`lerna bootstrap` accepts all [filter flags](https://www.npmjs.com/package/@lerna/filter-options).\n\nPass extra arguments to npm client by placing them after `--`:\n\n```sh\n$ lerna bootstrap -- --production --no-optional\n```\n\nMay also be configured in `lerna.json`:\n\n```js\n{\n  ...\n  \"npmClient\": \"yarn\",\n  \"npmClientArgs\": [\"--production\", \"--no-optional\"]\n}\n```\n\n### --hoist [glob]\n\nInstall external dependencies matching `glob` at the repo root so they're\navailable to all packages. Any binaries from these dependencies will be\nlinked into dependent package `node_modules/.bin/` directories so they're\navailable for npm scripts. If the option is present but no `glob` is given\nthe default is `**` (hoist everything). This option only affects the\n`bootstrap` command.\n\n```sh\n$ lerna bootstrap --hoist\n```\n\nFor background on `--hoist`, see the [hoist documentation](https://github.com/lerna/lerna/blob/main/doc/hoist.md).\n\nNote: If packages depend on different _versions_ of an external dependency,\nthe most commonly used version will be hoisted, and a warning will be emitted.\n\nNote: `--hoist` is [incompatible with `file:` specifiers](https://github.com/lerna/lerna/issues/1679#issuecomment-461544321). Use one or the other.\n\n### --strict\n\nWhen used in conjunction with hoist will throw an error and stop bootstrapping after emitting the version warnings. Has no effect if you aren't hoisting, or if there are no version warnings.\n\n```sh\n$ lerna bootstrap --hoist --strict\n```\n\n### --nohoist [glob]\n\nDo _not_ install external dependencies matching `glob` at the repo root. This\ncan be used to opt out of hoisting for certain dependencies.\n\n```sh\n$ lerna bootstrap --hoist --nohoist=babel-*\n```\n\n### --ignore\n\n```sh\n$ lerna bootstrap --ignore component-*\n```\n\nThe `--ignore` flag, when used with the `bootstrap` command, can also be set in `lerna.json` under the `command.bootstrap.ignore` key. The command-line flag will take precedence over this option.\n\n**Example**\n\n```json\n{\n  \"version\": \"0.0.0\",\n  \"command\": {\n    \"bootstrap\": {\n      \"ignore\": \"component-*\"\n    }\n  }\n}\n```\n\n> Hint: The glob is matched against the package name defined in `package.json`,\n> not the directory name the package lives in.\n\n## Options\n\n### `--ignore-prepublish`\n\nSkip prepublish lifecycle scripts run by default in bootstrapped packages.\nNote, this lifecycle is [deprecated](https://docs.npmjs.com/misc/scripts#deprecation-note),\nand will likely be removed in the next major version of Lerna.\n\n```sh\n$ lerna bootstrap --ignore-prepublish\n```\n\n### `--ignore-scripts`\n\nSkip any lifecycle scripts normally run (`prepare`, etc) in bootstrapped packages.\n\n```sh\n$ lerna bootstrap --ignore-scripts\n```\n\n### `--registry <url>`\n\nWhen run with this flag, forwarded npm commands will use the specified registry for your package(s).\n\nThis is useful if you do not want to explicitly set up your registry\nconfiguration in all of your package.json files individually when e.g. using\nprivate registries.\n\n### `--npm-client <client>`\n\nMust be an executable that knows how to install npm package dependencies.\nThe default `--npm-client` is `npm`.\n\n```sh\n$ lerna bootstrap --npm-client=yarn\n```\n\nMay also be configured in `lerna.json`:\n\n```js\n{\n  ...\n  \"npmClient\": \"yarn\"\n}\n```\n\n### `--use-workspaces`\n\nEnables integration with [Yarn Workspaces](https://github.com/yarnpkg/rfcs/blob/master/implemented/0000-workspaces-install-phase-1.md) (available since yarn@0.27+).\nThe values in the array are the commands in which Lerna will delegate operation to Yarn (currently only bootstrapping).\nIf `--use-workspaces` is true then `packages` will be overridden by the value from `package.json/workspaces.`\nMay also be configured in `lerna.json`:\n\n```js\n{\n  ...\n  \"npmClient\": \"yarn\",\n  \"useWorkspaces\": true\n}\n```\n\nThe root-level package.json must also include a `workspaces` array:\n\n```json\n{\n  \"private\": true,\n  \"devDependencies\": {\n    \"lerna\": \"^2.2.0\"\n  },\n  \"workspaces\": [\"packages/*\"]\n}\n```\n\nThis list is broadly similar to lerna's `packages` config (a list of globs matching directories with a package.json),\nexcept it does not support recursive globs (`\"**\"`, a.k.a. \"globstars\").\n\n### `--no-ci`\n\nWhen using the default `--npm-client`, `lerna bootstrap` will call [`npm ci`](https://docs.npmjs.com/cli/ci) instead of `npm install` in CI environments.\nTo disable this behavior, pass `--no-ci`:\n\n```sh\n$ lerna bootstrap --no-ci\n```\n\nTo _force_ it during a local install (where it is not automatically enabled), pass `--ci`:\n\n```sh\n$ lerna bootstrap --ci\n```\n\nThis can be useful for \"clean\" re-installs, or initial installations after fresh cloning.\n\n### `--force-local`\n\n```sh\n$ lerna bootstrap --force-local\n```\n\nWhen passed, this flag causes the `bootstrap` command to always symlink local dependencies regardless of matching version range.\n\n### `publishConfig.directory`\n\nThis _non-standard_ field allows you to customize the symlinked subdirectory that will be the _source_ directory of the symlink, just like how the published package would be consumed.\n\n```json\n  \"publishConfig\": {\n    \"directory\": \"dist\"\n  }\n```\n\nIn this example, when this package is bootstrapped and linked, the `dist` directory will be the source directory (e.g. `package-1/dist => node_modules/package-1`).\n\n## How It Works\n\nLet's use `babel` as an example.\n\n- `babel-generator` and `source-map` (among others) are dependencies of `babel-core`.\n- `babel-core`'s [`package.json`](https://github.com/babel/babel/blob/13c961d29d76ccd38b1fc61333a874072e9a8d6a/packages/babel-core/package.json#L28-L47) lists both these packages as keys in `dependencies`, as shown below.\n\n```js\n// babel-core package.json\n{\n  \"name\": \"babel-core\",\n  ...\n  \"dependencies\": {\n    ...\n    \"babel-generator\": \"^6.9.0\",\n    ...\n    \"source-map\": \"^0.5.0\"\n  }\n}\n```\n\n- Lerna checks if each dependency is also part of the Lerna repo.\n  - In this example, `babel-generator` can be an internal dependency, while `source-map` is always an external dependency.\n  - The version of `babel-generator` in the `package.json` of `babel-core` is satisfied by `packages/babel-generator`, passing for an internal dependency.\n  - `source-map` is `npm install`ed (or `yarn`ed) like normal.\n- `packages/babel-core/node_modules/babel-generator` symlinks to `packages/babel-generator`\n- This allows nested directory imports\n\n## Notes\n\n- When a dependency version in a package is not satisfied by a package of the same name in the repo, it will be `npm install`ed (or `yarn`ed) like normal.\n- Dist-tags, like `latest`, do not satisfy [semver](https://semver.npmjs.com/) ranges.\n- Circular dependencies result in circular symlinks which _may_ impact your editor/IDE.\n\n[Webstorm](https://www.jetbrains.com/webstorm/) locks up when circular symlinks are present. To prevent this, add `node_modules` to the list of ignored files and folders in `Preferences | Editor | File Types | Ignored files and folders`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lerna/lerna.git",
    "directory": "commands/bootstrap"
  },
  "scripts": {
    "test": "echo \"Run tests from root\" && exit 1"
  },
  "version": "4.0.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": ">= 10.18.0"
      },
      "pkgid": "@lerna/bootstrap@4.0.0"
    }
  ]
}
