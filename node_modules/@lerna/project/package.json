{
  "_args": [
    [
      {
        "raw": "@lerna/project@4.0.0",
        "scope": "@lerna",
        "escapedName": "@lerna%2fproject",
        "name": "@lerna/project",
        "rawSpec": "4.0.0",
        "spec": "4.0.0",
        "type": "version"
      },
      "/usr/local/apache/htdocs/node_modules/@lerna/command"
    ]
  ],
  "_from": "@lerna/project@4.0.0",
  "_hasShrinkwrap": false,
  "_id": "@lerna/project@4.0.0",
  "_inCache": true,
  "_location": "/@lerna/project",
  "_nodeVersion": "14.15.5",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/project_4.0.0_1612996923537_0.6471751932161565"
  },
  "_npmUser": {
    "name": "evocateur",
    "email": "daniel.stockman@gmail.com"
  },
  "_npmVersion": "lerna/4.0.0/node@v14.15.5+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@lerna/project@4.0.0",
    "scope": "@lerna",
    "escapedName": "@lerna%2fproject",
    "name": "@lerna/project",
    "rawSpec": "4.0.0",
    "spec": "4.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/@lerna/command"
  ],
  "_resolved": "https://registry.npmjs.org/@lerna/project/-/project-4.0.0.tgz",
  "_shasum": "ff84893935833533a74deff30c0e64ddb7f0ba6b",
  "_shrinkwrap": null,
  "_spec": "@lerna/project@4.0.0",
  "_where": "/usr/local/apache/htdocs/node_modules/@lerna/command",
  "author": {
    "name": "Daniel Stockman",
    "url": "https://github.com/evocateur"
  },
  "bugs": {
    "url": "https://github.com/lerna/lerna/issues"
  },
  "dependencies": {
    "@lerna/package": "4.0.0",
    "@lerna/validation-error": "4.0.0",
    "cosmiconfig": "^7.0.0",
    "dedent": "^0.7.0",
    "dot-prop": "^6.0.1",
    "glob-parent": "^5.1.1",
    "globby": "^11.0.2",
    "load-json-file": "^6.2.0",
    "npmlog": "^4.1.2",
    "p-map": "^4.0.0",
    "resolve-from": "^5.0.0",
    "write-json-file": "^4.3.0"
  },
  "description": "Lerna project configuration",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-o0MlVbDkD5qRPkFKlBZsXZjoNTWPyuL58564nSfZJ6JYNmgAptnWPB2dQlAc7HWRZkmnC2fCkEdoU+jioPavbg==",
    "shasum": "ff84893935833533a74deff30c0e64ddb7f0ba6b",
    "tarball": "https://registry.npmjs.org/@lerna/project/-/project-4.0.0.tgz",
    "fileCount": 9,
    "unpackedSize": 30066,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgJGE8CRA9TVsSAnZWagAA9OkP/1DDH/+STDIX3ChOXQYZ\nK8j8V88jLzPrU07psFcu8GHuQlmyN7ToVg00wOooBvbC9L9M5KE7pUXVbo2g\nDXIJ7cl2Rhmq6lfnD2smwRcMKq5NaFto+YXyHySkcgDkfHgbAN6eoijybduL\nFXi8L8yaz6W5wi1IfzKtyOwsNU/YeL85rZ7T4uLwB20wHwOOES4juO1WU3zA\nUzUShFmrjcJmo6GFP0RJCwVyg01pjtjsYnWOwGFcwWlWUf+bVXzXEd6k9cxZ\nLvfxDZOjATChLPa2TmDLkXY3m4UoNPywQUiD5SRgMMfTmh39XajbvxiTUSAs\nYUi9bUkEi/EQsBjm6fJ8YKwmKiDfSyxDTgVc1aOdNCX576rX5+XsPlBvQV94\nt927ZUqcxotIjgeseMu45OzT2vdusWUHjhZNr6/QxYW+DyYjG9KUUYFreXOa\nECnau2FQ7cxs59JfXymzOllRvImQRYSCari/+nAtMTnmGCts4D9wqn5jeAaj\nR4r3i4Z3PV+S0YqwdAQoRtorBpXnlncsSHWJ5bTRfJTBjGfKINpcv27NM+mQ\n9sfP2wK6C0ARI+ziZ+e5l+FKNmtHqYI9WWPM6l306Y4kmX6Ma5CkKBRRqVXu\nTHRzu8Lbg+X57QkrDXQ5t47OyYGLSzzOybKtqtQSUHICKgPZiuwsYv6w9y+5\nnXMJ\r\n=xcy5\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 10.18.0"
  },
  "gitHead": "4582c476e07dddddd6b2e3ab6e7f52c1f9eed59a",
  "homepage": "https://github.com/lerna/lerna/tree/master/core/project#readme",
  "keywords": [
    "lerna",
    "core"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "hzoo",
      "email": "hi@henryzoo.com"
    },
    {
      "name": "evocateur",
      "email": "daniel.stockman@gmail.com"
    }
  ],
  "name": "@lerna/project",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# `@lerna/project`\n\n> Lerna project configuration\n\n## Configuration Resolution\n\nLerna's file-based configuration is located in `lerna.json` or the `lerna` property of `package.json`.\nWherever this configuration is found is considered the \"root\" of the lerna-managed multi-package repository.\nA minimum-viable configuration only needs a `version` property; the following examples are equivalent:\n\n```json\n{\n  \"version\": \"1.2.3\"\n}\n```\n\n```json\n{\n  \"name\": \"my-monorepo\",\n  \"version\": \"0.0.0-root\",\n  \"private\": true,\n  \"lerna\": {\n    \"version\": \"1.2.3\"\n  }\n}\n```\n\nAny other properties on this configuration object will be used as defaults for CLI options of _all_ lerna subcommands. That is to say, CLI options _always_ override values found in configuration files (a standard practice for CLI applications).\n\n### Command-Specific Configuration\n\nTo focus configuration on a particular subcommand, use the `command` subtree. Each subproperty of `command` corresponds to a lerna subcommand (`publish`, `create`, `run`, `exec`, etc).\n\n```json\n{\n  \"version\": \"1.2.3\",\n  \"command\": {\n    \"publish\": {\n      \"loglevel\": \"verbose\"\n    }\n  },\n  \"loglevel\": \"success\"\n}\n```\n\nIn the example above, `lerna publish` will act as if `--loglevel verbose` was passed.\nAll other subcommands will receive the equivalent of `--loglevel success` (much much quieter).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lerna/lerna.git",
    "directory": "core/project"
  },
  "scripts": {
    "test": "echo \"Run tests from root\" && exit 1"
  },
  "version": "4.0.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": ">= 10.18.0"
      },
      "pkgid": "@lerna/project@4.0.0"
    }
  ]
}
