{
  "_args": [
    [
      {
        "raw": "@lerna/filter-options@4.0.0",
        "scope": "@lerna",
        "escapedName": "@lerna%2ffilter-options",
        "name": "@lerna/filter-options",
        "rawSpec": "4.0.0",
        "spec": "4.0.0",
        "type": "version"
      },
      "/usr/local/apache/htdocs/node_modules/@lerna/add"
    ]
  ],
  "_from": "@lerna/filter-options@4.0.0",
  "_hasShrinkwrap": false,
  "_id": "@lerna/filter-options@4.0.0",
  "_inCache": true,
  "_location": "/@lerna/filter-options",
  "_nodeVersion": "14.15.5",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/filter-options_4.0.0_1612996931356_0.2869708855689146"
  },
  "_npmUser": {
    "name": "evocateur",
    "email": "daniel.stockman@gmail.com"
  },
  "_npmVersion": "lerna/4.0.0/node@v14.15.5+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@lerna/filter-options@4.0.0",
    "scope": "@lerna",
    "escapedName": "@lerna%2ffilter-options",
    "name": "@lerna/filter-options",
    "rawSpec": "4.0.0",
    "spec": "4.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/@lerna/add",
    "/@lerna/bootstrap",
    "/@lerna/clean",
    "/@lerna/exec",
    "/@lerna/list",
    "/@lerna/run"
  ],
  "_resolved": "https://registry.npmjs.org/@lerna/filter-options/-/filter-options-4.0.0.tgz",
  "_shasum": "ac94cc515d7fa3b47e2f7d74deddeabb1de5e9e6",
  "_shrinkwrap": null,
  "_spec": "@lerna/filter-options@4.0.0",
  "_where": "/usr/local/apache/htdocs/node_modules/@lerna/add",
  "author": {
    "name": "Daniel Stockman",
    "url": "https://github.com/evocateur"
  },
  "bugs": {
    "url": "https://github.com/lerna/lerna/issues"
  },
  "dependencies": {
    "@lerna/collect-updates": "4.0.0",
    "@lerna/filter-packages": "4.0.0",
    "dedent": "^0.7.0",
    "npmlog": "^4.1.2"
  },
  "description": "Options for lerna sub-commands that need filtering",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-vV2ANOeZhOqM0rzXnYcFFCJ/kBWy/3OA58irXih9AMTAlQLymWAK0akWybl++sUJ4HB9Hx12TOqaXbYS2NM5uw==",
    "shasum": "ac94cc515d7fa3b47e2f7d74deddeabb1de5e9e6",
    "tarball": "https://registry.npmjs.org/@lerna/filter-options/-/filter-options-4.0.0.tgz",
    "fileCount": 6,
    "unpackedSize": 19803,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgJGFDCRA9TVsSAnZWagAA5/0QAIaDihrMCdfmyC71N17d\nhbf0ATWgIjuQUvdrDq53X8tLW/Fs2PEjqlbgvdYWeC3QL9hvU9yfIinoXyNT\nvAoa+qpPglWhG34VVcXmHqK9JZmCZEr7uV0xCWjFwxoi2rWm26IuG2S/cTHX\nyEbZ/WEvWptH4285QqalcsRXHhqzgkskVlGRz5nNgCNG5BC9hrCyu/MIK0We\nCmm81XNqJ5Z8sF2pF4nGVyBcvuL/4xyhdPd5cvubAP8bmuJiPhxiJkgotyLr\nXZjVxCEZ6eVyqZZ0xrbqYW+FQmuUrnpiQJo9rgRUQNPeBNlAv2oF7Hxo3bqJ\nfEO/nHcr0vv/xessxEnorRHQ+Jg2qWzkIag/xny318dzkszbYxpHA7MHDekm\ni2zA25mH1xFmYSJEL/8cdntR+Pe/jfBbhrDMrjpr7a+k3ep44B3MWzriLmyE\nX7pY7wCOQwAsepq+KBG/uxH1K8trBaK3uKJNDolKm7T4TEQpXxLXc4UBUJFY\nbPphRdUuwZnKuUkzdU9/FoL99CsjovNkSve9QqkW+N8q0dGUc42TVUx9VpWn\nqJy88S5F4DoIDfWmGug1Ka9vwYNj0AZjfENrX1jXSTlq0MHmu5VdQHUO2AFF\nwAAiLQc/Jk1K70t98ghzB6CNe+MYWuk/quPZ6ghZgdHi7xqELtjQduq9YJ1B\nj6Um\r\n=BrAD\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 10.18.0"
  },
  "gitHead": "4582c476e07dddddd6b2e3ab6e7f52c1f9eed59a",
  "homepage": "https://github.com/lerna/lerna/tree/master/core/filter-options#readme",
  "keywords": [
    "lerna",
    "core"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "hzoo",
      "email": "hi@henryzoo.com"
    },
    {
      "name": "evocateur",
      "email": "daniel.stockman@gmail.com"
    }
  ],
  "name": "@lerna/filter-options",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# `@lerna/filter-options`\n\n> Options for lerna sub-commands that need filtering\n\nInstall [lerna](https://www.npmjs.com/package/lerna) for access to the `lerna` CLI.\n\n## Options\n\n### `--scope <glob>`\n\nInclude only packages with names matching the given glob.\n\n```sh\n$ lerna exec --scope my-component -- ls -la\n$ lerna run --scope toolbar-* test\n$ lerna run --scope package-1 --scope *-2 lint\n```\n\n**Note:** For certain globs, it may be necessary to quote the option argument to avoid premature shell expansion.\n\n### `--ignore <glob>`\n\nExclude packages with names matching the given glob.\n\n```sh\n$ lerna exec --ignore package-{1,2,5}  -- ls -la\n$ lerna run --ignore package-1  test\n$ lerna run --ignore package-@(1|2) --ignore package-3 lint\n```\n\nMore examples of filtering can be found [here](https://github.com/lerna/lerna/blob/c0a750e0f482c16dda2f922f235861283efbe94d/commands/list/__tests__/list-command.test.js#L305-L356).\n\n### `--no-private`\n\nExclude private packages. They are included by default.\n\n### `--since [ref]`\n\nOnly include packages that have been changed since the specified `ref`. If no ref is passed, it defaults to the most-recent tag.\n\n```sh\n# List the contents of packages that have changed since the latest tag\n$ lerna exec --since -- ls -la\n\n# Run the tests for all packages that have changed since `main`\n$ lerna run test --since main\n\n# List all packages that have changed since `some-branch`\n$ lerna ls --since some-branch\n```\n\n_This can be particularly useful when used in CI, if you can obtain the target branch a PR will be going into, because you can use that as the `ref` to the `--since` option. This works well for PRs going into the default branch as well as feature branches._\n\n### `--exclude-dependents`\n\nExclude all transitive dependents when running a command with `--since`, overriding the default \"changed\" algorithm.\n\nThis flag has no effect without `--since`, and will throw an error in that case.\n\n### `--include-dependents`\n\nInclude all transitive dependents when running a command regardless of `--scope`, `--ignore`, or `--since`.\n\n### `--include-dependencies`\n\nInclude all transitive dependencies when running a command regardless of `--scope`, `--ignore`, or `--since`.\n\nUsed in combination with any command that accepts `--scope` (`bootstrap`, `clean`, `ls`, `run`, `exec`).\nEnsures that all dependencies (and dev dependencies) of any scoped packages (either through `--scope` or `--ignore`) are operated on as well.\n\n> Note: This will override the `--scope` and `--ignore` flags.\n>\n> > i.e. A package matched by the `--ignore` flag will still be bootstrapped if it is depended on by another package that is being bootstrapped.\n\nThis is useful for situations where you want to \"set up\" a single package that relies on other packages being set up.\n\n```sh\n$ lerna bootstrap --scope my-component --include-dependencies\n# my-component and all of its dependencies will be bootstrapped\n```\n\n```sh\n$ lerna bootstrap --scope \"package-*\" --ignore \"package-util-*\" --include-dependencies\n# all packages matching \"package-util-*\" will be ignored unless they are\n# depended upon by a package whose name matches \"package-*\"\n```\n\n### `--include-merged-tags`\n\n```sh\n$ lerna exec --since --include-merged-tags -- ls -la\n```\n\nInclude tags from merged branches when running a command with `--since`. This is only useful if you do a lot of publishing from feature branches, which is not generally recommended.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lerna/lerna.git",
    "directory": "core/filter-options"
  },
  "scripts": {
    "test": "echo \"Run tests from root\" && exit 1"
  },
  "version": "4.0.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": ">= 10.18.0"
      },
      "pkgid": "@lerna/filter-options@4.0.0"
    }
  ]
}
