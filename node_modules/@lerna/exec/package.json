{
  "_args": [
    [
      {
        "raw": "@lerna/exec@4.0.0",
        "scope": "@lerna",
        "escapedName": "@lerna%2fexec",
        "name": "@lerna/exec",
        "rawSpec": "4.0.0",
        "spec": "4.0.0",
        "type": "version"
      },
      "/usr/local/apache/htdocs/node_modules/lerna"
    ]
  ],
  "_from": "@lerna/exec@4.0.0",
  "_hasShrinkwrap": false,
  "_id": "@lerna/exec@4.0.0",
  "_inCache": true,
  "_location": "/@lerna/exec",
  "_nodeVersion": "14.15.5",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/exec_4.0.0_1612996941595_0.6802858884162528"
  },
  "_npmUser": {
    "name": "evocateur",
    "email": "daniel.stockman@gmail.com"
  },
  "_npmVersion": "lerna/4.0.0/node@v14.15.5+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@lerna/exec@4.0.0",
    "scope": "@lerna",
    "escapedName": "@lerna%2fexec",
    "name": "@lerna/exec",
    "rawSpec": "4.0.0",
    "spec": "4.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/lerna"
  ],
  "_resolved": "https://registry.npmjs.org/@lerna/exec/-/exec-4.0.0.tgz",
  "_shasum": "eb6cb95cb92d42590e9e2d628fcaf4719d4a8be6",
  "_shrinkwrap": null,
  "_spec": "@lerna/exec@4.0.0",
  "_where": "/usr/local/apache/htdocs/node_modules/lerna",
  "author": {
    "name": "Daniel Stockman",
    "url": "https://github.com/evocateur"
  },
  "bugs": {
    "url": "https://github.com/lerna/lerna/issues"
  },
  "dependencies": {
    "@lerna/child-process": "4.0.0",
    "@lerna/command": "4.0.0",
    "@lerna/filter-options": "4.0.0",
    "@lerna/profiler": "4.0.0",
    "@lerna/run-topologically": "4.0.0",
    "@lerna/validation-error": "4.0.0",
    "p-map": "^4.0.0"
  },
  "description": "Execute an arbitrary command in each package",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-VGXtL/b/JfY84NB98VWZpIExfhLOzy0ozm/0XaS4a2SmkAJc5CeUfrhvHxxkxiTBLkU+iVQUyYEoAT0ulQ8PCw==",
    "shasum": "eb6cb95cb92d42590e9e2d628fcaf4719d4a8be6",
    "tarball": "https://registry.npmjs.org/@lerna/exec/-/exec-4.0.0.tgz",
    "fileCount": 6,
    "unpackedSize": 26360,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgJGFOCRA9TVsSAnZWagAAR84P/Ahe2TJzE2MBxT/Se6Br\nalFK08NAOU08mIAWk5ZIukQB4zOmTn+CcP5RZNh2dm+1pRRmsF4EeEbB/uGA\nQQ0ErLFcyhkL8Tmgzq8waD7nm3cq9HmLo/nb1+5+PBryTvjmWgNjELBxvHK2\nus7GhFvJC+hLqGWEI2npJjM/jjd9BjWGnIthoV3NzWG9iMlp595eD4DJTSog\npUIQ3+tYBEHMH8A4MWrRmNfMQG1LqhmLaQ9Usmn9VQ3u9yTbfNcDz577zLRf\nkQl9IL/Ez0jQakHQihr4qW5HKse4QUcpXoNn88IYe9931sIO26P1iJmMUGfC\nVd/00w7G5VjhG92y3k4ukUh80BytRMiUNtJdPFUJn3A6r6irIp3O4/udopsZ\n38GOQpCSb5DvhDJZHKdljet4DI84volchvc0zp7cWy+FNLirlIiZWvPwTsI5\nX6pCAWt8vxGEFSRk1E09HFsPFgCilcj1ulfWNpPQDt0+N5WTd6xSqpFX3OnS\nQCoJQITED+x1YBx5t/5d3DyBAzuPByCbCM3v9vNHLGXTB+nWuIjd1MDtMl47\nufmaOesATgChQ6XKl4AsDZbdh9Uc8hE61mJoAHgEhcd6AEecl6f/GZkpl64Z\nQuIjy85U/lVyyIZUnzs/fXoh4Kgah93aWJ1bVGBEZvYg+/DJaVrgR9M+qAeS\nn3z2\r\n=BFiZ\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 10.18.0"
  },
  "gitHead": "4582c476e07dddddd6b2e3ab6e7f52c1f9eed59a",
  "homepage": "https://github.com/lerna/lerna/tree/master/commands/exec#readme",
  "keywords": [
    "lerna",
    "command"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "hzoo",
      "email": "hi@henryzoo.com"
    },
    {
      "name": "evocateur",
      "email": "daniel.stockman@gmail.com"
    }
  ],
  "name": "@lerna/exec",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# `@lerna/exec`\n\n> Execute an arbitrary command in each package\n\nInstall [lerna](https://www.npmjs.com/package/lerna) for access to the `lerna` CLI.\n\n## Usage\n\n```sh\n$ lerna exec -- <command> [..args] # runs the command in all packages\n$ lerna exec -- rm -rf ./node_modules\n$ lerna exec -- protractor conf.js\n```\n\nRun an arbitrary command in each package.\nA double-dash (`--`) is necessary to pass dashed flags to the spawned command, but is not necessary when all the arguments are positional.\n\nThe name of the current package is available through the environment variable `LERNA_PACKAGE_NAME`:\n\n```sh\n$ lerna exec -- npm view \\$LERNA_PACKAGE_NAME\n```\n\nYou may also run a script located in the root dir, in a complicated dir structure through the environment variable `LERNA_ROOT_PATH`:\n\n```sh\n$ lerna exec -- node \\$LERNA_ROOT_PATH/scripts/some-script.js\n```\n\n## Options\n\n`lerna exec` accepts all [filter flags](https://www.npmjs.com/package/@lerna/filter-options).\n\n```sh\n$ lerna exec --scope my-component -- ls -la\n```\n\n> The commands are spawned in parallel, using the concurrency given (except with `--parallel`).\n> The output is piped through, so not deterministic.\n> If you want to run the command in one package after another, use it like this:\n\n```sh\n$ lerna exec --concurrency 1 -- ls -la\n```\n\n### `--stream`\n\nStream output from child processes immediately, prefixed with the originating\npackage name. This allows output from different packages to be interleaved.\n\n```sh\n$ lerna exec --stream -- babel src -d lib\n```\n\n### `--parallel`\n\nSimilar to `--stream`, but completely disregards concurrency and topological sorting, running a given command or script immediately in all matching packages with prefixed streaming output. This is the preferred flag for long-running processes such as `babel src -d lib -w` run over many packages.\n\n```sh\n$ lerna exec --parallel -- babel src -d lib -w\n```\n\n> **Note:** It is advised to constrain the scope of this command when using\n> the `--parallel` flag, as spawning dozens of subprocesses may be\n> harmful to your shell's equanimity (or maximum file descriptor limit,\n> for example). YMMV\n\n### `--no-bail`\n\n```sh\n# Run a command, ignoring non-zero (error) exit codes\n$ lerna exec --no-bail <command>\n```\n\nBy default, `lerna exec` will exit with an error if _any_ execution returns a non-zero exit code.\nPass `--no-bail` to disable this behavior, executing in _all_ packages regardless of exit code.\n\n### `--no-prefix`\n\nDisable package name prefixing when output is streaming (`--stream` _or_ `--parallel`).\nThis option can be useful when piping results to other processes, such as editor plugins.\n\n### `--profile`\n\nProfiles the command executions and produces a performance profile which can be analyzed using DevTools in a\nChromium-based browser (direct url: `devtools://devtools/bundled/devtools_app.html`). The profile shows a timeline of\nthe command executions where each execution is assigned to an open slot. The number of slots is determined by the\n`--concurrency` option and the number of open slots is determined by `--concurrency` minus the number of ongoing\noperations. The end result is a visualization of the parallel execution of your commands.\n\nThe default location of the performance profile output is at the root of your project.\n\n```sh\n$ lerna exec --profile -- <command>\n```\n\n> **Note:** Lerna will only profile when topological sorting is enabled (i.e. without `--parallel` and `--no-sort`).\n\n### `--profile-location <location>`\n\nYou can provide a custom location for the performance profile output. The path provided will be resolved relative to the current working directory.\n\n```sh\n$ lerna exec --profile --profile-location=logs/profile/ -- <command>\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lerna/lerna.git",
    "directory": "commands/exec"
  },
  "scripts": {
    "test": "echo \"Run tests from root\" && exit 1"
  },
  "version": "4.0.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": ">= 10.18.0"
      },
      "pkgid": "@lerna/exec@4.0.0"
    }
  ]
}
