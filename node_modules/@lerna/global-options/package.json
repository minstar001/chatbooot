{
  "_args": [
    [
      {
        "raw": "@lerna/global-options@4.0.0",
        "scope": "@lerna",
        "escapedName": "@lerna%2fglobal-options",
        "name": "@lerna/global-options",
        "rawSpec": "4.0.0",
        "spec": "4.0.0",
        "type": "version"
      },
      "/usr/local/apache/htdocs/node_modules/@lerna/cli"
    ]
  ],
  "_from": "@lerna/global-options@4.0.0",
  "_hasShrinkwrap": false,
  "_id": "@lerna/global-options@4.0.0",
  "_inCache": true,
  "_location": "/@lerna/global-options",
  "_nodeVersion": "14.15.5",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/global-options_4.0.0_1612996896313_0.17375045042765014"
  },
  "_npmUser": {
    "name": "evocateur",
    "email": "daniel.stockman@gmail.com"
  },
  "_npmVersion": "lerna/4.0.0/node@v14.15.5+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@lerna/global-options@4.0.0",
    "scope": "@lerna",
    "escapedName": "@lerna%2fglobal-options",
    "name": "@lerna/global-options",
    "rawSpec": "4.0.0",
    "spec": "4.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/@lerna/cli"
  ],
  "_resolved": "https://registry.npmjs.org/@lerna/global-options/-/global-options-4.0.0.tgz",
  "_shasum": "c7d8b0de6a01d8a845e2621ea89e7f60f18c6a5f",
  "_shrinkwrap": null,
  "_spec": "@lerna/global-options@4.0.0",
  "_where": "/usr/local/apache/htdocs/node_modules/@lerna/cli",
  "author": {
    "name": "Daniel Stockman",
    "url": "https://github.com/evocateur"
  },
  "bugs": {
    "url": "https://github.com/lerna/lerna/issues"
  },
  "dependencies": {},
  "description": "Global options applicable to _every_ lerna sub-command",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-TRMR8afAHxuYBHK7F++Ogop2a82xQjoGna1dvPOY6ltj/pEx59pdgcJfYcynYqMkFIk8bhLJJN9/ndIfX29FTQ==",
    "shasum": "c7d8b0de6a01d8a845e2621ea89e7f60f18c6a5f",
    "tarball": "https://registry.npmjs.org/@lerna/global-options/-/global-options-4.0.0.tgz",
    "fileCount": 5,
    "unpackedSize": 9172,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgJGEgCRA9TVsSAnZWagAAkQcP/3gx3pAmlM4NEauLbIWN\nqXrZB6s2UFHFKkHIuWqHzhUk5srm8Ya8kkxnI1BxEddj1EzEdlF6HXG01k+A\nHkg5S+ZY6UMyJ5BtuqCLVjxjn+MxGq4phxGpDyHKGarSr6Z6WweZCtCcj1yc\nw7Wbp8RPFJ40yvnU4o+FOOx1+b6Y6YW3lsWfADJNnqmaje5EDm9e/eYZKy1N\nqcuruXjs41PL1aP2Wyr//giKaZr0w6PMcDIsiwUJvAC+uJ2BigW1SGdUAWa5\nmUtoORZHl/GFuONOZgYKNgDvgbNCjKdfi/JCzfmxvEomyKOqQiduxMPLD/Vr\nMmzbl12l2leVm25axa/1aI/pzANYOcz+cYNW0PCF26Hu3vSXZmwifthX+5+P\nO2gVrP7M8IcTlK8m/DI2Ek87dSM1gs1EMHTJr09kqSQ7eXki7k69zgmkGMwW\ndyVTtUNfoYtR5etCqtggVA6VeO7UgNGkwP9w5cwOj7+/qb/iY1VNA4bONCV4\nJ3yvfc99gPj49hQtlLyjrpkJSQX9cZ8Nk6jKHaI+ln07peq/VIob4hJuOVfX\nqDfr/2P7BS5flr7Y6pt1QSLl2bRxJWtdnyYSjFmF+Qh/vWZIRwM0G7gouUxj\n2axhyIAHbC33vDaV5BgpFc9sZkFJTyeyJls3+HsZDASfY2qpLHbDytzHikfM\n4XM9\r\n=8rBx\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 10.18.0"
  },
  "gitHead": "4582c476e07dddddd6b2e3ab6e7f52c1f9eed59a",
  "homepage": "https://github.com/lerna/lerna/tree/master/core/global-options#readme",
  "keywords": [
    "lerna",
    "core"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "hzoo",
      "email": "hi@henryzoo.com"
    },
    {
      "name": "evocateur",
      "email": "daniel.stockman@gmail.com"
    }
  ],
  "name": "@lerna/global-options",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# `@lerna/global-options`\n\n> Global options applicable to _every_ lerna sub-command\n\n## Options\n\n### `--concurrency`\n\nHow many threads to use when Lerna parallelizes the tasks (defaults to count of logical CPU cores)\n\n```sh\n$ lerna publish --concurrency 1\n```\n\n### `--loglevel <silent|error|warn|success|info|verbose|silly>`\n\nWhat level of logs to report. On failure, all logs are written to lerna-debug.log in the current working directory.\n\nAny logs of a higher level than the setting are shown. The default is \"info\".\n\n### `--max-buffer <bytes>`\n\nSet a max buffer length for each underlying process call. Useful for example\nwhen someone wants to import a repo with a larger amount of commits while\nrunning `lerna import`. In that case the built-in buffer length might not\nbe sufficient.\n\n### `--no-progress`\n\nDisable progress bars. This is always the case in a CI environment.\n\n### `--no-sort`\n\nBy default, all tasks execute on packages in topologically sorted order as to respect the dependency relationships of the packages in question. Cycles are broken on a best-effort basis in a way not guaranteed to be consistent across Lerna invocations.\n\nTopological sorting can cause concurrency bottlenecks if there are a small number of packages with many dependents or if some packages take a disproportionately long time to execute. The `--no-sort` option disables sorting, instead executing tasks in an arbitrary order with maximum concurrency.\n\nThis option can also help if you run multiple \"watch\" commands. Since `lerna run` will execute commands in topologically sorted order, it can end up waiting for a command before moving on. This will block execution when you run \"watch\" commands, since they typically never end. An example of a \"watch\" command is [running `babel` with the `--watch` CLI flag](https://babeljs.io/docs/usage/cli/#babel-compile-files).\n\n### `--reject-cycles`\n\nFail immediately if a cycle is found (in `bootstrap`, `exec`, `publish` or `run`).\n\n```sh\n$ lerna bootstrap --reject-cycles\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lerna/lerna.git",
    "directory": "core/global-options"
  },
  "scripts": {
    "test": "echo \"Run tests from root\" && exit 1"
  },
  "version": "4.0.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": ">= 10.18.0"
      },
      "pkgid": "@lerna/global-options@4.0.0"
    }
  ]
}
