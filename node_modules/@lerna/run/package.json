{
  "_args": [
    [
      {
        "raw": "@lerna/run@4.0.0",
        "scope": "@lerna",
        "escapedName": "@lerna%2frun",
        "name": "@lerna/run",
        "rawSpec": "4.0.0",
        "spec": "4.0.0",
        "type": "version"
      },
      "/usr/local/apache/htdocs/node_modules/lerna"
    ]
  ],
  "_from": "@lerna/run@4.0.0",
  "_hasShrinkwrap": false,
  "_id": "@lerna/run@4.0.0",
  "_inCache": true,
  "_location": "/@lerna/run",
  "_nodeVersion": "14.15.5",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/run_4.0.0_1612996941596_0.8768443738792941"
  },
  "_npmUser": {
    "name": "evocateur",
    "email": "daniel.stockman@gmail.com"
  },
  "_npmVersion": "lerna/4.0.0/node@v14.15.5+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@lerna/run@4.0.0",
    "scope": "@lerna",
    "escapedName": "@lerna%2frun",
    "name": "@lerna/run",
    "rawSpec": "4.0.0",
    "spec": "4.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/lerna"
  ],
  "_resolved": "https://registry.npmjs.org/@lerna/run/-/run-4.0.0.tgz",
  "_shasum": "4bc7fda055a729487897c23579694f6183c91262",
  "_shrinkwrap": null,
  "_spec": "@lerna/run@4.0.0",
  "_where": "/usr/local/apache/htdocs/node_modules/lerna",
  "author": {
    "name": "Daniel Stockman",
    "url": "https://github.com/evocateur"
  },
  "bugs": {
    "url": "https://github.com/lerna/lerna/issues"
  },
  "dependencies": {
    "@lerna/command": "4.0.0",
    "@lerna/filter-options": "4.0.0",
    "@lerna/npm-run-script": "4.0.0",
    "@lerna/output": "4.0.0",
    "@lerna/profiler": "4.0.0",
    "@lerna/run-topologically": "4.0.0",
    "@lerna/timer": "4.0.0",
    "@lerna/validation-error": "4.0.0",
    "p-map": "^4.0.0"
  },
  "description": "Run an npm script in each package that contains that script",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-9giulCOzlMPzcZS/6Eov6pxE9gNTyaXk0Man+iCIdGJNMrCnW7Dme0Z229WWP/UoxDKg71F2tMsVVGDiRd8fFQ==",
    "shasum": "4bc7fda055a729487897c23579694f6183c91262",
    "tarball": "https://registry.npmjs.org/@lerna/run/-/run-4.0.0.tgz",
    "fileCount": 6,
    "unpackedSize": 26773,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgJGFNCRA9TVsSAnZWagAAea4P/iiTDBawW3m3qO0gG6RM\n+4jsLg8A7FF7wTd6g46nbcY4IK625DTgRqsUKdFND9MBM8OB9+tQ7wff+lun\ni0fNdUKrqlxpF0Ew0OXCxPmLyreCtj7qdCg9fbZ3lomzk7wnEYMMMnKk1dew\nfGGi22SEJMm88zgdJjSAW0ykpJ9gTU7eElBC1/fffgLvThcSszgWHoiZ0To/\nW9MXtXsTK5DvQFVQCextL6GD4r/qg1iDdYg43JgQWZPEiIqQ6yjb+WDRorKi\ngpSXjJmhDgWmpFw1XlSoT4uJkZ9PDBnaY+kxsKytzGjVJm/TOkF5uzjtkDap\npht2uzL508dwEvfYyqKc8LAw3OWF0hnlaWUVemMbxumyf1Cp+6qDHybQ82nJ\nvSr+YAdy4o3sQ8JEkOvT5AeVJHaCpaqPrzfA482O2Sfj1Pn4hXdRC0qKDSR1\n7MavJSbEwIMMTxbk8YFlijBP0A1E6s0XORgKdhZgIKzxtFq5rTH/8iljENck\noMc4/H5DsvHasfAVXEeIlsSlZBBsvF29jb9CKG/kE7RguapzUx6Pgf+pY+TT\n78YzExxuEkhefMifnJnCCK/VChcTxThNvqAMin0S5IpVul8ez2jenVRlwhsn\nA6JjMFd/OZHxWLD8fwYQa4OzS0ouaxqeo9IJWx0NweJu9fO2N4GfVTBHyRTE\nz6p6\r\n=Y3bP\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 10.18.0"
  },
  "gitHead": "4582c476e07dddddd6b2e3ab6e7f52c1f9eed59a",
  "homepage": "https://github.com/lerna/lerna/tree/master/commands/run#readme",
  "keywords": [
    "lerna",
    "command"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "hzoo",
      "email": "hi@henryzoo.com"
    },
    {
      "name": "evocateur",
      "email": "daniel.stockman@gmail.com"
    }
  ],
  "name": "@lerna/run",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# `@lerna/run`\n\n> Run an npm script in each package that contains that script\n\nInstall [lerna](https://www.npmjs.com/package/lerna) for access to the `lerna` CLI.\n\n## Usage\n\n```sh\n$ lerna run <script> -- [..args] # runs npm run my-script in all packages that have it\n$ lerna run test\n$ lerna run build\n\n# watch all packages and transpile on change, streaming prefixed output\n$ lerna run --parallel watch\n```\n\nRun an [npm script](https://docs.npmjs.com/misc/scripts) in each package that contains that script. A double-dash (`--`) is necessary to pass dashed arguments to the script execution.\n\n## Options\n\n`lerna run` accepts all [filter flags](https://www.npmjs.com/package/@lerna/filter-options).\n\n```sh\n$ lerna run --scope my-component test\n```\n\n### `--npm-client <client>`\n\nMust be an executable that knows how to run npm lifecycle scripts.\nThe default `--npm-client` is `npm`.\n\n```sh\n$ lerna run build --npm-client=yarn\n```\n\nMay also be configured in `lerna.json`:\n\n```json\n{\n  \"command\": {\n    \"run\": {\n      \"npmClient\": \"yarn\"\n    }\n  }\n}\n```\n\n### `--stream`\n\nStream output from child processes immediately, prefixed with the originating\npackage name. This allows output from different packages to be interleaved.\n\n```sh\n$ lerna run watch --stream\n```\n\n### `--parallel`\n\nSimilar to `--stream`, but completely disregards concurrency and topological sorting, running a given command or script immediately in all matching packages with prefixed streaming output. This is the preferred flag for long-running processes such as `npm run watch` run over many packages.\n\n```sh\n$ lerna run watch --parallel\n```\n\n> **Note:** It is advised to constrain the scope of this command when using\n> the `--parallel` flag, as spawning dozens of subprocesses may be\n> harmful to your shell's equanimity (or maximum file descriptor limit,\n> for example). YMMV\n\n### `--no-bail`\n\n```sh\n# Run an npm script in all packages that contain it, ignoring non-zero (error) exit codes\n$ lerna run --no-bail test\n```\n\nBy default, `lerna run` will exit with an error if _any_ script run returns a non-zero exit code.\nPass `--no-bail` to disable this behavior, running the script in _all_ packages that contain it regardless of exit code.\n\n### `--no-prefix`\n\nDisable package name prefixing when output is streaming (`--stream` _or_ `--parallel`).\nThis option can be useful when piping results to other processes, such as editor plugins.\n\n### `--profile`\n\nProfiles the script executions and produces a performance profile which can be analyzed using DevTools in a\nChromium-based browser (direct url: `devtools://devtools/bundled/devtools_app.html`). The profile shows a timeline of\nthe script executions where each execution is assigned to an open slot. The number of slots is determined by the\n`--concurrency` option and the number of open slots is determined by `--concurrency` minus the number of ongoing\noperations. The end result is a visualization of the parallel execution of your scripts.\n\nThe default location of the performance profile output is at the root of your project.\n\n```sh\n$ lerna run build --profile\n```\n\n> **Note:** Lerna will only profile when topological sorting is enabled (i.e. without `--parallel` and `--no-sort`).\n\n### `--profile-location <location>`\n\nYou can provide a custom location for the performance profile output. The path provided will be resolved relative to the current working directory.\n\n```sh\n$ lerna run build --profile --profile-location=logs/profile/\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lerna/lerna.git",
    "directory": "commands/run"
  },
  "scripts": {
    "test": "echo \"Run tests from root\" && exit 1"
  },
  "version": "4.0.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": ">= 10.18.0"
      },
      "pkgid": "@lerna/run@4.0.0"
    }
  ]
}
