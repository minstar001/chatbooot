{"version":3,"file":"pluggable.js","sources":["../src/pluggable.js"],"sourcesContent":["/*\n       ____  __                        __    __         _\n      / __ \\/ /_  __ ___   ___  ____ _/ /_  / /__      (_)____\n     / /_/ / / / / / __ \\/ __ \\/ __/ / __ \\/ / _ \\    / / ___/\n    / ____/ / /_/ / /_/ / /_/ / /_/ / /_/ / /  __/   / (__  )\n   /_/   /_/\\__,_/\\__, /\\__, /\\__/_/_.___/_/\\___(_)_/ /____/\n                 /____//____/                    /___/\n */\n\n// Pluggable.js lets you to make your Javascript code pluggable while still\n// keeping sensitive objects and data private through closures.\n\n\n// `wrappedOverride` creates a partially applied wrapper function\n// that makes sure to set the proper super method when the\n// overriding method is called. This is done to enable\n// chaining of plugin methods, all the way up to the\n// original method.\nfunction wrappedOverride (key, value, super_method, default_super, ...args) {\n    if (typeof super_method === \"function\") {\n        if (typeof this.__super__ === \"undefined\") {\n            /* We're not on the context of the plugged object.\n             * This can happen when the overridden method is called via\n             * an event handler or when it's a constructor.\n             *\n             * In this case, we simply tack on the  __super__ obj.\n             */\n            this.__super__ = default_super;\n        }\n        this.__super__[key] = super_method.bind(this);\n    }\n    return value.apply(this, args);\n}\n\n\n// The `PluginSocket` class contains the plugin architecture, and gets\n// created whenever `pluggable.enable(obj);` is called on the object\n// that you want to make pluggable.\n// You can also see it as the thing into which the plugins are plugged.\n// It takes two parameters, first, the object being made pluggable, and\n// then the name by which the pluggable object may be referenced on the\n// __super__ object (inside overrides).\nclass PluginSocket {\n\n    constructor (plugged, name) {\n        this.name = name;\n        this.plugged = plugged;\n        if (typeof this.plugged.__super__ === 'undefined') {\n            this.plugged.__super__ = {};\n        } else if (typeof this.plugged.__super__ === 'string') {\n            this.plugged.__super__ = { '__string__': this.plugged.__super__ };\n        }\n        this.plugged.__super__[name] = this.plugged;\n        this.plugins = {};\n        this.initialized_plugins = [];\n    }\n\n    // `_overrideAttribute` overrides an attribute on the original object\n    // (the thing being plugged into).\n    //\n    // If the attribute being overridden is a function, then the original\n    // function will still be available via the `__super__` attribute.\n    //\n    // If the same function is being overridden multiple times, then\n    // the original function will be available at the end of a chain of\n    // functions, starting from the most recent override, all the way\n    // back to the original function, each being referenced by the\n    // previous' __super__ attribute.\n    //\n    // For example:\n    //\n    // `plugin2.MyFunc.__super__.myFunc => plugin1.MyFunc.__super__.myFunc => original.myFunc`\n    _overrideAttribute (key, plugin) {\n        const value = plugin.overrides[key];\n        if (typeof value === \"function\") {\n            const default_super = {};\n            default_super[this.name] = this.plugged;\n            const super_method = this.plugged[key];\n            this.plugged[key] = function (...args) {\n                return wrappedOverride.apply(this, [key, value, super_method,  default_super, ...args]);\n            }\n        } else {\n            this.plugged[key] = value;\n        }\n    }\n\n    _extendObject (obj, attributes) {\n        if (!obj.prototype.__super__) {\n            obj.prototype.__super__ = {};\n            obj.prototype.__super__[this.name] = this.plugged;\n        }\n        for (const [key, value] of Object.entries(attributes)) {\n            if (key === 'events') {\n                obj.prototype[key] = Object.assign(value, obj.prototype[key]);\n            } else if (typeof value === 'function') {\n                // We create a partially applied wrapper function, that\n                // makes sure to set the proper super method when the\n                // overriding method is called. This is done to enable\n                // chaining of plugin methods, all the way up to the\n                // original method.\n                const default_super = {};\n                default_super[this.name] = this.plugged;\n                const super_method = obj.prototype[key];\n                obj.prototype[key] = function (...args) {\n                    return wrappedOverride.apply(this, [key, value, super_method, default_super, ...args]);\n                }\n            } else {\n                obj.prototype[key] = value;\n            }\n        }\n    }\n\n    // Plugins can specify dependencies (by means of the\n    // `dependencies` list attribute) which refers to dependencies\n    // which will be initialized first, before the plugin itself gets initialized.\n    //\n    // If `strict_plugin_dependencies` is set to `false` (on the object being\n    // made pluggable), then no error will be thrown if any of these plugins aren't\n    // available.\n    loadPluginDependencies (plugin) {\n        plugin.dependencies?.forEach(name => {\n            const dep = this.plugins[name];\n            if (dep) {\n                if (dep.dependencies?.includes(plugin.__name__)) {\n                    /* FIXME: circular dependency checking is only one level deep. */\n                    throw \"Found a circular dependency between the plugins \\\"\"+\n                        plugin.__name__+\"\\\" and \\\"\"+name+\"\\\"\";\n                }\n                this.initializePlugin(dep);\n            } else {\n                this.throwUndefinedDependencyError(\n                    \"Could not find dependency \\\"\"+name+\"\\\" \"+\n                    \"for the plugin \\\"\"+plugin.__name__+\"\\\". \"+\n                    \"If it's needed, make sure it's loaded by require.js\");\n            }\n        });\n    }\n\n    throwUndefinedDependencyError (msg) {\n        if (this.plugged.strict_plugin_dependencies) {\n            throw msg;\n        } else {\n            if (console.warn) {\n                console.warn(msg);\n            } else {\n                console.log(msg);\n            }\n        }\n    }\n\n    // `applyOverrides` is called by initializePlugin. It applies any\n    // and all overrides of methods or Backbone views and models that\n    // are defined on any of the plugins.\n    applyOverrides (plugin) {\n        Object.keys(plugin.overrides || {}).forEach(key => {\n            const override = plugin.overrides[key];\n            if (typeof override === \"object\") {\n                if (typeof this.plugged[key] === 'undefined') {\n                    this.throwUndefinedDependencyError(\n                        `Plugin \"${plugin.__name__}\" tried to override \"${key}\" but it's not found.`);\n                } else {\n                    this._extendObject(this.plugged[key], override);\n                }\n            } else {\n                this._overrideAttribute(key, plugin);\n            }\n        });\n    }\n\n    // `initializePlugin` applies the overrides (if any) defined on all\n    // the registered plugins and then calls the initialize method of the plugin\n    initializePlugin (plugin) {\n        if (!Object.keys(this.allowed_plugins).includes(plugin.__name__)) {\n            /* Don't initialize disallowed plugins. */\n            return;\n        }\n        if (this.initialized_plugins.includes(plugin.__name__)) {\n            /* Don't initialize plugins twice, otherwise we get\n            * infinite recursion in overridden methods.\n            */\n            return;\n        }\n        if (typeof plugin.enabled === 'boolean' && plugin.enabled ||\n            plugin.enabled?.(this.plugged) ||\n            plugin.enabled == null) { // isNil\n\n            Object.assign(plugin, this.properties);\n            if (plugin.dependencies) {\n                this.loadPluginDependencies(plugin);\n            }\n            this.applyOverrides(plugin);\n            if (typeof plugin.initialize === \"function\") {\n                plugin.initialize.bind(plugin)(this);\n            }\n            this.initialized_plugins.push(plugin.__name__);\n        }\n    }\n\n    // `registerPlugin` registers (or inserts, if you'd like) a plugin,\n    // by adding it to the `plugins` map on the PluginSocket instance.\n    registerPlugin (name, plugin) {\n        if (name in this.plugins) {\n            throw new Error('Error: Plugin name '+name+' is already taken');\n        }\n        plugin.__name__ = name;\n        this.plugins[name] = plugin;\n    }\n\n    // `initializePlugins` should get called once all plugins have been\n    // registered. It will then iterate through all the plugins, calling\n    // `initializePlugin` for each.\n    // The passed in  properties variable is an object with attributes and methods\n    // which will be attached to the plugins.\n    initializePlugins (properties={}, whitelist=[], blacklist=[]) {\n        if (!Object.keys(this.plugins).length) {\n            return;\n        }\n        this.properties = properties;\n        this.allowed_plugins = {};\n\n        for (const [key, plugin] of Object.entries(this.plugins)) {\n            if ((!whitelist.length || whitelist.includes(key)) && !blacklist.includes(key)) {\n                this.allowed_plugins[key] = plugin;\n            }\n        }\n        Object.values(this.allowed_plugins).forEach(o => this.initializePlugin(o));\n    }\n}\n\nfunction enable (object, name, attrname) {\n    // Call the `enable` method to make an object pluggable\n    //\n    // It takes three parameters:\n    // - `object`: The object that gets made pluggable.\n    // - `name`: The string name by which the now pluggable object\n    //     may be referenced on the __super__ obj (in overrides).\n    //     The default value is \"plugged\".\n    // - `attrname`: The string name of the attribute on the now\n    //     pluggable object, which refers to the PluginSocket instance\n    //     that gets created.\n    if (typeof attrname === \"undefined\") {\n        attrname = \"pluginSocket\";\n    }\n    if (typeof name === 'undefined') {\n        name = 'plugged';\n    }\n    object[attrname] = new PluginSocket(object, name);\n    return object;\n}\n\nexport {\n    enable\n};\nexport default {\n    enable\n};\n"],"names":["wrappedOverride","key","value","super_method","default_super","__super__","bind","args","apply","PluginSocket","plugged","name","plugins","initialized_plugins","plugin","overrides","obj","attributes","prototype","Object","assign","entries","dependencies","forEach","dep","includes","__name__","initializePlugin","throwUndefinedDependencyError","msg","strict_plugin_dependencies","console","warn","log","keys","override","_extendObject","_overrideAttribute","allowed_plugins","enabled","properties","loadPluginDependencies","applyOverrides","initialize","push","Error","whitelist","blacklist","length","values","o","enable","object","attrname"],"mappings":"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"}